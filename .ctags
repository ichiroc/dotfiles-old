--langdef=jsx
--langmap=jsx:.jsx
--regex-jsx=/^[ \t]*([a-z]+[ \t]+)*class[ \t]+([A-Za-z0-9_]+)[ \t]*([^)])/\2/c,class,classes/
--regex-jsx=/^[ \t]*import[ \t]+([^;]+)/\1/r,import,imports/
--regex-jsx=/[ \t]*const[ \t]+([a-zA-Z0-9_]+) /\1/c,const,consts/
--regex-jsx=/^[ \t]*([a-z]+[ \t]+)*get[ \t]+([A-Za-z0-9_]+[ \t]*[^{;]*)/\2/g,getter,getters/
--regex-jsx=/^[ \t]*([a-z]+[ \t]+)*function[ \t]+([A-Za-z0-9_]+[ \t]*[^{;]*)/\2/f,function,functions/
--regex-jsx=/^[ \t]*([a-z]+[ \t]+)*[ \t]+([A-Za-z0-9_]+[ \t]*[^{;]*)/\2/f,function,functions/
--regex-jsx=/^[ \t]*([a-z]+[ \t]+)*class[ \t]+([A-Za-z0-9_]+)[ \t]*([^)])/\2/c,class,classes/
--regex-jsx=/^[ \t]*([a-z]+[ \t]+)*interface[ \t]+([A-Za-z0-9_]+)[ \t]*([^)])/\2/i,interface,interfaces/
--regex-jsx=/^[ \t]*([a-z]+[ \t]+)*mixin[ \t]+([A-Za-z0-9_]+)[ \t]*([^)])/\2/m,mixin,mixins/
--langdef=vb
--langmap=vb:.vb
--regex-vb=/^[ \t]*(Public|Private)?[ \t]*Structure[ \t]+([a-zA-Z0-9_]+)/\2/s,subroutine/i
--regex-vb=/^[ \t]*(Public|Private)?[ \t]*Sub[ \t]+([a-zA-Z0-9_]+)/\2/s,subroutine/i
--regex-vb=/^[ \t]*(Public|Private)?[ \t]*Function[ \t]+([a-zA-Z0-9_]+)/\2/f,function/i
--regex-vb=/^[ \t]*(Public|Private)[ \t]+([a-zA-Z0-9_]+)[ \t]+As[ \t]+/\2/v,variable/i
--regex-vb=/^[ \t]*(Public|Private)?[ \t]*Const[ \t]+([a-zA-Z0-9_]+)[ \t]+(As|=)[ \t]+/\2/c,const/i
--regex-vb=/^[ \t]*(Public)?[ \t]*Property[ \t]*(Get|Let|Set)[ \t]+([a-zA-Z0-9_]+)/\3/n,name/i
--regex-vb=/^[ \t]*(Public|Private)?[ \t]*Enum[ \t]+([a-zA-Z0-9_]+)/\2/e,enum/i
--langdef=Swift
--langmap=Swift:+.swift
--regex-swift=/(var|let)[ \t]+([^:=]+).*$/\2/,variable/
--regex-swift=/func[ \t]+([^\(\)]+)\([^\(\)]*\)/\1/,function/
--regex-swift=/class[ \t]+([^:\{]+).*$/\1/,class/
--regex-swift=/protocol[ \t]+([^:\{]+).*$/\1/,protocol/
--regex-swift=/struct[ \t]+([^:\{]+).*$/\1/,struct/
--regex-swift=/typealias[ \t]+([^:\{]+).*$/\1/,typealias/
--regex-ruby=/^[ \t]*scope[ \t]*:([a-zA-Z0-9_]+)/\1/